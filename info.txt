video url: 

https://www.youtube.com/watch?v=AUdW01JQFME&list=PL0MUAHwery4pP3XMpzDIMirWRS28ffD_x


#1 - 30.40(десктопная версия шапки готова)
#1 - 30.44(начинаем делать адаптив)
#1- complete

video stop: 
#2 - 26.20
еще не делал git commit последнего, жду масштабного сохранения в github, оно впереди












-------------------------------------------------- NOTES ----------------------------------------------------

 - cursor pointer должен быть только на ссылках. Правило хорошего тона.

 #2. --------------------------------------------------------------------------------------------------------
 ----- 17.40 -----
 Теперь я хочу обратить ваше внимание на то, что при инспектировании через devtools элементов списка 
 banner-pagination-item мы видим, что их высота гораздо больше, чем их внутренне содерживое. А именно 28px
 Это происходит из-за того, что веб-браузер элементам списка li по умолчанию задает не стандартное значение 
 display
 При этом значение элементам так же неявно браузером задается высота, равная размерам межстрочного интервала 
 line-height
 Чтобы высота этих элементов соответствовала высоте их внутреннего содержимого поменяем значение этих элементов 
 display на flex в нашем css файле. 
 В классе .banner-pagination-item {
    display: flex;
 }

Теперь высота равна высоте внутреннего содержимого. То есть высоте самих кнопок.

----- 21.8 -----
Начинаем адаптив секции banner
Заголовок banner-title нужно перевести в единицы измерения viewport
Для этого нужно поделить размер заголовка в пикселях на ширину макета и затем умножить на 100
Формула расчета: (360 / 1920) * 100 = 18.75
И получаемое значение - это значение для viewport единиц

----- Проверяем правильность расчетов -----
- в инструментах разработчика веб-браузера выставляем размер макета - 1920px(смотрим размеры в дизайне макета)

- в инструментах разработчика веб-браузера в html-разметке выделяем наш элемент заголовка banner-title,
и добавляем вторым правилом для него font-size: 18.75vw;
Теперь у нас два правила отвечающие за размер заголовка:
font-size: 360px;
и
font-size: 18.75vw;

- отключаем галочку в правиле font-size: 18.75vw;
Правило font-size: 360px; остается включенным
Если размеры заголовка не меняются, то расчет был произведен верно.

----- Пишем правило для заголовка .banner-title  -----
font-size: min(18.75vw, 360px); - браузер среди них будет выбирать наименьшее
Таким образом мы добавляем ограничение размеров заголовка. То есть на больших экранах он не привысит значение 
оригинального размера заголовка, и будет корректно сжиматься при сужении экрана.

----- Применим тот же алгоритм для вычисления размера стрелки, что и в заголовке -----
- размер стрелки делим на размер ширины макета и умножаем на 100
Формула расчета: (194 / 1920) * 100 = 10.1041666667

- округлим полученное значение до 2-ух знаков после запятой, это значит будет 10.1

- укажем это значение в ширине стрелки в классе .banner-info::before {
    width: 10.1vw;
}
и ограничим размеры стрелки также, как мы делали это в заголовке, и должно быть следующее:
.banner-info::before {
    width: min(10.1vw, 194px);
}

----- Применим функцию clamp для элемента класса .banner-info -----
Формула расчета: (изучить отдельно как расчитывать)
- нужное значение clamp:
.banner-info {
    font-size: clamp(16px, 1.56vw, 30px); /* 3 значения: 1-ое миниммальное, 2-ое рекомендуемое, 3-тье максимальное */
}
теперь уменьшая экран, размер элемента .banner-info, как и предыдущие проработанные элементы пропорционально 
уменьшаются.  













